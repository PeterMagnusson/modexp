//======================================================================
//
// tb_modexp_autogenerated.v
// -----------
// Testbench modular exponentiation core.
//
//
// Author: Joachim Strombergson, Peter Magnusson
// Copyright (c) 2015, Assured AB
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or
// without modification, are permitted provided that the following
// conditions are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materials provided with the
//    distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
// COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
// ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//======================================================================

//------------------------------------------------------------------
// Simulator directives.
//------------------------------------------------------------------
`timescale 1ns/100ps


//------------------------------------------------------------------
// Test module.
//------------------------------------------------------------------
module tb_modexp_autogenerated();

  //----------------------------------------------------------------
  // Internal constant and parameter definitions.
  //----------------------------------------------------------------
  parameter DEBUG = 0;

  localparam CLK_HALF_PERIOD = 1;
  localparam CLK_PERIOD      = 2 * CLK_HALF_PERIOD;

  // The DUT address map.
  localparam GENERAL_PREFIX      = 4'h0;
  localparam ADDR_NAME0          = 8'h00;
  localparam ADDR_NAME1          = 8'h01;
  localparam ADDR_VERSION        = 8'h02;

  localparam ADDR_CTRL           = 8'h08;
  localparam CTRL_START_BIT      = 0;

  localparam ADDR_STATUS         = 8'h09;
  localparam STATUS_READY_BIT    = 0;

  localparam ADDR_MODULUS_LENGTH  = 8'h20;
  localparam ADDR_MESSAGE_LENGTH  = 8'h21;
  localparam ADDR_EXPONENT_LENGTH = 8'h22;

  localparam MODULUS_PREFIX      = 4'h1;
  localparam ADDR_MODULUS_START  = 8'h00;
  localparam ADDR_MODULUS_END    = 8'hff;

  localparam EXPONENT_PREFIX     = 4'h2;
  localparam ADDR_EXPONENT_START = 8'h00;
  localparam ADDR_EXPONENT_END   = 8'hff;

  localparam MESSAGE_PREFIX      = 4'h3;
  localparam MESSAGE_START       = 8'h00;
  localparam MESSAGE_END         = 8'hff;

  localparam RESULT_PREFIX       = 4'h4;
  localparam RESULT_START        = 8'h00;
  localparam RESULT_END          = 8'hff;


  //----------------------------------------------------------------
  // Register and Wire declarations.
  //----------------------------------------------------------------
  reg [31 : 0]  cycle_ctr;
  reg [31 : 0]  error_ctr;
  reg [31 : 0]  tc_ctr;

  reg [31 : 0]  read_data;
  reg [127 : 0] result_data;

  reg           tb_clk;
  reg           tb_reset_n;
  reg           tb_cs;
  reg           tb_we;
  reg [11  : 0] tb_address;
  reg [31 : 0]  tb_write_data;
  wire [31 : 0] tb_read_data;
  wire          tb_error;


  //----------------------------------------------------------------
  // Device Under Test.
  //----------------------------------------------------------------
  modexp dut(
             .clk(tb_clk),
             .reset_n(tb_reset_n),
             .cs(tb_cs),
             .we(tb_we),
             .address(tb_address),
             .write_data(tb_write_data),
             .read_data(tb_read_data)
            );


  //----------------------------------------------------------------
  // clk_gen
  //
  // Always running clock generator process.
  //----------------------------------------------------------------
  always
    begin : clk_gen
      #CLK_HALF_PERIOD;
      tb_clk = !tb_clk;
    end // clk_gen


  //----------------------------------------------------------------
  // sys_monitor()
  //
  // An always running process that creates a cycle counter and
  // conditionally displays information about the DUT.
  //----------------------------------------------------------------
  always
    begin : sys_monitor
      cycle_ctr = cycle_ctr + 1;

      #(CLK_PERIOD);

      if (DEBUG)
        begin
          dump_dut_state();
        end
    end


  //----------------------------------------------------------------
  // dump_dut_state()
  //
  // Dump the state of the dump when needed.
  //----------------------------------------------------------------
  task dump_dut_state();
    begin
      $display("cycle: 0x%016x", cycle_ctr);
      $display("State of DUT");
      $display("------------");
      $display("Inputs and outputs:");
      $display("cs   = 0x%01x, we = 0x%01x", tb_cs, tb_we);
      $display("addr = 0x%08x, read_data = 0x%08x, write_data = 0x%08x",
               tb_address, tb_read_data, tb_write_data);
      $display("");

      $display("State:");
      $display("ready_reg = 0x%01x, start_reg = 0x%01x, start_new = 0x%01x, start_we = 0x%01x",
               dut.ready_reg, dut.start_reg, dut.start_new, dut.start_we);
      $display("residue_valid = 0x%01x", dut.residue_valid_reg);
      $display("loop_counter_reg = 0x%08x", dut.loop_counter_reg);
      $display("exponent_length_reg = 0x%02x, modulus_length_reg = 0x%02x",
               dut.exponent_length_reg, dut.modulus_length_reg);
      $display("length_reg = 0x%02x, length_m1_reg = 0x%02x",
               dut.length_reg, dut.length_m1_reg);
      $display("ctrl_reg = 0x%04x", dut.modexp_ctrl_reg);
      $display("");
    end
  endtask // dump_dut_state


  //----------------------------------------------------------------
  // reset_dut()
  //
  // Toggle reset to put the DUT into a well known state.
  //----------------------------------------------------------------
  task reset_dut();
    begin
      $display("*** Toggle reset.");
      tb_reset_n = 0;

      #(2 * CLK_PERIOD);
      tb_reset_n = 1;
      $display("");
    end
  endtask // reset_dut


  //----------------------------------------------------------------
  // display_test_results()
  //
  // Display the accumulated test results.
  //----------------------------------------------------------------
  task display_test_results();
    begin
      if (error_ctr == 0)
        begin
          $display("*** All %02d test cases completed successfully", tc_ctr);
        end
      else
        begin
          $display("*** %02d tests completed - %02d test cases did not complete successfully.",
                   tc_ctr, error_ctr);
        end
    end
  endtask // display_test_results


  //----------------------------------------------------------------
  // init_sim()
  //
  // Initialize all counters and testbed functionality as well
  // as setting the DUT inputs to defined values.
  //----------------------------------------------------------------
  task init_sim();
    begin
      cycle_ctr          = 0;
      error_ctr          = 0;
      tc_ctr             = 0;

      tb_clk             = 0;
      tb_reset_n         = 1;

      tb_cs              = 0;
      tb_we              = 0;
      tb_address         = 8'h00;
      tb_write_data      = 32'h00000000;
    end
  endtask // init_sim


  //----------------------------------------------------------------
  // read_word()
  //
  // Read a data word from the given address in the DUT.
  // the word read will be available in the global variable
  // read_data.
  //----------------------------------------------------------------
  task read_word(input [11 : 0] address);
    begin
      tb_address = address;
      tb_cs = 1;
      tb_we = 0;
      #(CLK_PERIOD);
      read_data = tb_read_data;
      tb_cs = 0;

      if (DEBUG)
        begin
          $display("*** (read_word) Reading 0x%08x from 0x%02x.", read_data, address);
          $display("");
        end
    end
  endtask // read_word


  //----------------------------------------------------------------
  // write_word()
  //
  // Write the given word to the DUT using the DUT interface.
  //----------------------------------------------------------------
  task write_word(input [11 : 0] address,
                  input [31 : 0] word);
    begin
      if (DEBUG)
        begin
          $display("*** (write_word) Writing 0x%08x to 0x%02x.", word, address);
          $display("");
        end

      tb_address = address;
      tb_write_data = word;
      tb_cs = 1;
      tb_we = 1;
      #(2 * CLK_PERIOD);
      tb_cs = 0;
      tb_we = 0;
    end
  endtask // write_word


  //----------------------------------------------------------------
  // wait_ready()
  //
  // Wait until the ready flag in the core is set.
  //----------------------------------------------------------------
  task wait_ready();
    begin
      while (tb_read_data != 32'h00000001)
          read_word({GENERAL_PREFIX, ADDR_STATUS});

      if (DEBUG)
        $display("*** (wait_ready) Ready flag has been set.");
    end
  endtask // wait_ready


  //----------------------------------------------------------------
  // dump_message_mem()
  //
  // Dump the contents of the message memory.
  //----------------------------------------------------------------
  task dump_message_mem();
    reg [8 : 0] i;
    begin
      $display("Contents of the message memory:");
      for (i = 0 ; i < 256 ; i = i + 8)
        begin
          $display("message_mem[0x%02x .. 0x%02x] = 0x%08x 0x%08x 0x%08x 0x%08x  0x%08x 0x%08x 0x%08x 0x%08x",
                   i[7 : 0], (i[7 : 0] + 8'h07),
                   dut.message_mem.mem[(i[7 : 0] + 0)], dut.message_mem.mem[(i[7 : 0] + 1)],
                   dut.message_mem.mem[(i[7 : 0] + 2)], dut.message_mem.mem[(i[7 : 0] + 3)],
                   dut.message_mem.mem[(i[7 : 0] + 4)], dut.message_mem.mem[(i[7 : 0] + 5)],
                   dut.message_mem.mem[(i[7 : 0] + 6)], dut.message_mem.mem[(i[7 : 0] + 7)],
                   );
        end
      $display("");
    end
  endtask // dump_message_mem


  //----------------------------------------------------------------
  // dump_exponent_mem()
  //
  // Dump the contents of the exponent memory.
  //----------------------------------------------------------------
  task dump_exponent_mem();
    reg [8 : 0] i;
    begin
      $display("Contents of the exponent memory:");
      for (i = 0 ; i < 256 ; i = i + 8)
        begin
          $display("exponent_mem[0x%02x .. 0x%02x] = 0x%08x 0x%08x 0x%08x 0x%08x  0x%08x 0x%08x 0x%08x 0x%08x",
                   i[7 : 0], (i[7 : 0] + 8'h07),
                   dut.exponent_mem.mem[(i[7 : 0] + 0)], dut.exponent_mem.mem[(i[7 : 0] + 1)],
                   dut.exponent_mem.mem[(i[7 : 0] + 2)], dut.exponent_mem.mem[(i[7 : 0] + 3)],
                   dut.exponent_mem.mem[(i[7 : 0] + 4)], dut.exponent_mem.mem[(i[7 : 0] + 5)],
                   dut.exponent_mem.mem[(i[7 : 0] + 6)], dut.exponent_mem.mem[(i[7 : 0] + 7)],
                   );
        end
      $display("");
    end
  endtask // dump_exponent_mem


  //----------------------------------------------------------------
  // dump_modulus_mem()
  //
  // Dump the contents of the modulus memory.
  //----------------------------------------------------------------
  task dump_modulus_mem();
    reg [8 : 0] i;
    begin
      $display("Contents of the modulus memory:");
      for (i = 0 ; i < 256 ; i = i + 8)
        begin
          $display("modulus_mem[0x%02x .. 0x%02x] = 0x%08x 0x%08x 0x%08x 0x%08x  0x%08x 0x%08x 0x%08x 0x%08x",
                   i[7 : 0], (i[7 : 0] + 8'h07),
                   dut.modulus_mem.mem[(i[7 : 0] + 0)], dut.modulus_mem.mem[(i[7 : 0] + 1)],
                   dut.modulus_mem.mem[(i[7 : 0] + 2)], dut.modulus_mem.mem[(i[7 : 0] + 3)],
                   dut.modulus_mem.mem[(i[7 : 0] + 4)], dut.modulus_mem.mem[(i[7 : 0] + 5)],
                   dut.modulus_mem.mem[(i[7 : 0] + 6)], dut.modulus_mem.mem[(i[7 : 0] + 7)],
                   );
        end
      $display("");
    end
  endtask // dump_modulus_mem


  //----------------------------------------------------------------
  // dump_residue_mem()
  //
  // Dump the contents of the residue memory.
  //----------------------------------------------------------------
  task dump_residue_mem();
    reg [8 : 0] i;
    begin
      $display("Contents of the residue memory:");
      for (i = 0 ; i < 256 ; i = i + 8)
        begin
          $display("residue_mem[0x%02x .. 0x%02x] = 0x%08x 0x%08x 0x%08x 0x%08x  0x%08x 0x%08x 0x%08x 0x%08x",
                   i[7 : 0], (i[7 : 0] + 8'h07),
                   dut.residue_mem.mem[(i[7 : 0] + 0)], dut.residue_mem.mem[(i[7 : 0] + 1)],
                   dut.residue_mem.mem[(i[7 : 0] + 2)], dut.residue_mem.mem[(i[7 : 0] + 3)],
                   dut.residue_mem.mem[(i[7 : 0] + 4)], dut.residue_mem.mem[(i[7 : 0] + 5)],
                   dut.residue_mem.mem[(i[7 : 0] + 6)], dut.residue_mem.mem[(i[7 : 0] + 7)],
                   );
        end
      $display("");
    end
  endtask // dump_residue_mem


  //----------------------------------------------------------------
  // dump_result_mem()
  //
  // Dump the contents of the result memory.
  //----------------------------------------------------------------
  task dump_result_mem();
    reg [8 : 0] i;
    begin
      $display("Contents of the result memory:");
      for (i = 0 ; i < 256 ; i = i + 8)
        begin
          $display("result_mem[0x%02x .. 0x%02x] = 0x%08x 0x%08x 0x%08x 0x%08x  0x%08x 0x%08x 0x%08x 0x%08x",
                   i[7 : 0], (i[7 : 0] + 8'h07),
                   dut.result_mem.mem[(i[7 : 0] + 0)], dut.result_mem.mem[(i[7 : 0] + 1)],
                   dut.result_mem.mem[(i[7 : 0] + 2)], dut.result_mem.mem[(i[7 : 0] + 3)],
                   dut.result_mem.mem[(i[7 : 0] + 4)], dut.result_mem.mem[(i[7 : 0] + 5)],
                   dut.result_mem.mem[(i[7 : 0] + 6)], dut.result_mem.mem[(i[7 : 0] + 7)],
                   );
        end
      $display("");
    end
  endtask // dump_result_mem


  //----------------------------------------------------------------
  // dump_memories()
  //
  // Dump the contents of the memories in the dut.
  //----------------------------------------------------------------
  task dump_memories();
    begin
      dump_message_mem();
      dump_exponent_mem();
      dump_modulus_mem();
      dump_residue_mem();
      dump_result_mem();
    end
  endtask // dump_memories

  function assertEquals(
      input [31:0] expected,
      input [31:0] actual
    );
    begin
      if (expected === actual)
        begin
          assertEquals = 1; // success
        end
      else
        begin
          $display("Expected: 0x%08x, got 0x%08x", expected, actual);
          assertEquals = 0; // failure
        end
    end
  endfunction // assertEquals

  integer success;


  task autogenerated_65537_64_M4962768465676381896();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_64_M4962768465676381896");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hd522fe95); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h63d4a7f1); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hc2a94bf9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h1f25be1f); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000003); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000003); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h810ea537, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'hf16a61ab, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_64_M4962768465676381896 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_64_M4962768465676381896 success.");
    end
  endtask // autogenerated_65537_64_M4962768465676381896



  task autogenerated_65537_64_M5159275287763741611();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_64_M5159275287763741611");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hdb5a7e09); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h86b98bfb); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hb3164743); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'he1de267d); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000003); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000003); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h9fc7f328, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h3ba0ae18, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_64_M5159275287763741611 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_64_M5159275287763741611 success.");
    end
  endtask // autogenerated_65537_64_M5159275287763741611



  task autogenerated_65537_64_3760534544499724252();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_64_3760534544499724252");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hf077656f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h3bf9e69b); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hb6684dc3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h79a5824b); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000003); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000003); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h419a024f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'hdddf178e, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_64_3760534544499724252 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_64_3760534544499724252 success.");
    end
  endtask // autogenerated_65537_64_3760534544499724252



  task autogenerated_65537_128_3878376283807279832();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_128_3878376283807279832");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hf5e8eee0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hc06b048a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h964b2105); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h2c36ad6b); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h956e61b3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h27997bc4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h94e7e5c9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'hb53585cf); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000005); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000005); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h1e97bff8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h60029e6e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'hedaef85e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'hfb0c6562, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_128_3878376283807279832 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_128_3878376283807279832 success.");
    end
  endtask // autogenerated_65537_128_3878376283807279832



  task autogenerated_65537_128_5594822731491506219();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_128_5594822731491506219");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h94c70152); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h9760b47a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h7922cacc); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'hc9c2f56b); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h9f887d3a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'ha1230a1a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'he560a3f7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'hc245a555); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000005); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000005); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h5555e69f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'hb4fc0507, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h4aa643fb, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'hd910f8b2, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_128_5594822731491506219 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_128_5594822731491506219 success.");
    end
  endtask // autogenerated_65537_128_5594822731491506219



  task autogenerated_65537_128_769311575533169616();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_128_769311575533169616");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hececab79); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h8abb30ad); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'hfd2d013e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'hf5f24773); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'ha7b17ce0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hf7f05f94); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h629d65a2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h139a2d49); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000005); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000005); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h34ec0fed, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h8e605c68, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h8ac69c43, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'h564e08ef, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_128_769311575533169616 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_128_769311575533169616 success.");
    end
  endtask // autogenerated_65537_128_769311575533169616



  task autogenerated_65537_256_7584111717683545699();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_256_7584111717683545699");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hbd589a51); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h2ba97013); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'hc4736649); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'he233fd5c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h39fcc5e5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h2d60b324); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h1112f2d0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'h1177c62b); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hf169d36e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hbe2ce61d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hc2e87809); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h4fed15c3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h7c70eac5); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'ha123e643); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h299b36d2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h788e583b); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000009); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000009); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h7c5f0fee, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h73028fc5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'hc4fe57c4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'h91a6f5be, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'h33a5c174, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h2d2c2bcd, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'hda80e7d6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'hfb4c889f, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_256_7584111717683545699 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_256_7584111717683545699 success.");
    end
  endtask // autogenerated_65537_256_7584111717683545699



  task autogenerated_65537_256_M3116426901380202388();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_256_M3116426901380202388");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hc5c1f875); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h62caa265); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h58c31648); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'hd77101ee); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h94b50d12); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h2e2e7ae8); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h3abe9570); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'h105c1855); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hf51bef0c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h2fb32570); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h4eb3fe31); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h7934d65d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h90d5a552); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'h52648a86); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h565fb839); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'hc75f1a47); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000009); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000009); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h839155be, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'hd05138cc, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h98d22bd5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'h11c6b803, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'he88f2c20, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h5a0ccc95, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'hd25fec18, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h738a2779, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_256_M3116426901380202388 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_256_M3116426901380202388 success.");
    end
  endtask // autogenerated_65537_256_M3116426901380202388



  task autogenerated_65537_256_1049687409305378688();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_256_1049687409305378688");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h82de8463); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hf235d47f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h95751d38); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h580de775); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h6aebb7a8); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h6d60c9ad); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'haf927246); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'had3ebde3); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hc3606522); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hbc9af383); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hd6734d1c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h77921e72); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h150019c7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'h934fe417); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h5be873ad); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h91875637); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000009); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000009); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h2c94c309, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h70134b91, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'hac7f5ab5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'ha203d0ba, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'h1e3a3933, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'hf0a6e980, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h4ca3af7e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'he6fc5275, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_256_1049687409305378688 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_256_1049687409305378688 success.");
    end
  endtask // autogenerated_65537_256_1049687409305378688



  task autogenerated_65537_512_7440167874398799474();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_512_7440167874398799474");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'he91e19b4); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hc45338ec); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h4de78521); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h26761b1c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'hcae937be); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h2ab87f56); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'hd66443b5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'h0636c0e0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'h163fe5e6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h094faa6c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'h9e754917); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h5f5dcf8e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'h340ffed6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'hbfbe4247); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'h7772b5b4); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'h5850ce63); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hc0386396); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hecea4cb2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hf975ffdd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h8a2d8972); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h5d03f82b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'hab1293fe); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h164f77ae); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h59212631); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h51d7a4c4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'h93eaab90); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h3304e412); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h5eee3a88); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'h9679e002); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h99ad216e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'h6adce8ed); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'hb2d08efd); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000011); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000011); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h892c9c50, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h0eb9ea6b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h28759466, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'hc0051310, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'ha785aea0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'hf4a74c0f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h56974b49, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h43b1b9d6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h80e3ce92, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'h088ffc0f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'hac26662b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'hfeacdaa0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'h87ca5bd8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'h3723e796, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'had22dabf, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'h3abdc23f, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_512_7440167874398799474 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_512_7440167874398799474 success.");
    end
  endtask // autogenerated_65537_512_7440167874398799474



  task autogenerated_65537_512_6048688486258747650();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_512_6048688486258747650");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hf9a16e25); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h5074fe3c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'hd04724c5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h806b40cd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h42c89208); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h4c71c52b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h8234b8b2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'h56fa0c8a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'h3431a0ad); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'hbce87c69); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'hb9aa3a2d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h3e45ec1a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'hb9d13738); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'h9eebd0f0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'hd30f3cda); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'h6ab6a2fb); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h994de332); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hd6c3cbda); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h63a87924); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'hd6774ad2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'hf06c2310); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'hdb5a499f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h06deb232); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h64b22116); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h50ccaf57); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'ha88cec88); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'hba5dd49d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h022b0bba); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'hd6cec5d2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h3d8e4ef6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'h23948572); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'h1e2f98ff); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000011); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000011); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h7b505c69, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h2e70ea98, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'hbd34e0fb, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'h168742fe, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'h9da33217, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h65e652be, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'hd44b4f76, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h6735effe, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'hbf7e75d1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'hacd328e2, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'hdfad8e05, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'hd12e370d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'he17e7944, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'h44839e35, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'hcf076872, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'h1d0dd369, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_512_6048688486258747650 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_512_6048688486258747650 success.");
    end
  endtask // autogenerated_65537_512_6048688486258747650



  task autogenerated_65537_512_M3689965194811981076();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_512_M3689965194811981076");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hd24b95c4); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h4525868a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h8df5b5cb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h8e68c32d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h6ded6bed); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'heccc3433); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h7a2fc0c0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'h46b54898); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'h4f6da5c2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h6de64a90); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'hbef0d2b6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h13ef5a96); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'ha9338232); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'h3e887893); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'h9d5f9cf3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'had6f28b7); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'haaad186d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'he7baeeaa); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hb439b14e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h5880e681); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h2a1e5b87); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'h5aaaf09e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h96de78c5); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'he25616c0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h25afe443); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'h9a987cbe); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'hb13ee8b4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h546fa2fb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'ha4a1de34); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'haa196c50); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'h78d64632); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'h690fc5f5); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000011); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000011); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h3518d088, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h032f7380, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h4031fd22, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'h9709c823, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'h35e0e6e7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'haeaaf0d1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h965c7b88, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h43679c12, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h5b2967cc, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'h3de0bf24, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'hd8222647, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'ha9d1a700, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'h68463812, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'h20e3674a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h8c7e4f56, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'h261c6bbd, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_512_M3689965194811981076 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_512_M3689965194811981076 success.");
    end
  endtask // autogenerated_65537_512_M3689965194811981076



  task autogenerated_65537_1024_M5783369654979853500();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_1024_M5783369654979853500");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'ha05bba64); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h84e94373); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h6dde5c2c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'hd2a943ef); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'hb3f24892); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h9ece7d28); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h1289c608); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'ha37ae367); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'h64709285); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h656501bc); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'he885e891); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'hf6a80718); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'hf0ec2ec7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'h10db7220); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'hbdb7584b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'h0e5eae7f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h11}, 32'h7be75140); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h12}, 32'h843dfd12); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h13}, 32'h791f077d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h14}, 32'h8fc3a6ef); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h15}, 32'h0f68aa78); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h16}, 32'h0a8f00a6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h17}, 32'hcbf7ffe6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h18}, 32'h53203c2b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h19}, 32'he4bd9493); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1a}, 32'h42e1e01e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1b}, 32'h0467c1b5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1c}, 32'h7d6eb524); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1d}, 32'he15db3e5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1e}, 32'h56abb799); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1f}, 32'h42eb1f18); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h20}, 32'hcdbef06b); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h11}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h12}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h13}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h14}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h15}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h16}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h17}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h18}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h19}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h20}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hff36ef6e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h220264eb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h8418c06d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h65fda3dc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h02d04dd5); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'he8c100a2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h00dde237); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h24f8ce0b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h6e07bb42); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'hbc969ecb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h5b20795c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h12d42376); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'h2d599b65); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'hb50f9ed7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'h9b7e97f3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'h24b477bd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h11}, 32'h2b811840); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h12}, 32'hbc98d794); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h13}, 32'h85cb4cf4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h14}, 32'hd06421e1); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h15}, 32'hdd8682bb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h16}, 32'h3a3069ae); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h17}, 32'h3f2868c3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h18}, 32'he3eaf12a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h19}, 32'h8505e761); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1a}, 32'h1344bd32); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1b}, 32'h374fd824); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1c}, 32'h90ab2641); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1d}, 32'hb3349edc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1e}, 32'hd2e9ed7c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1f}, 32'h433a59a7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h20}, 32'hcb81cefb); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000021); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000021); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h629cd01e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'heec284a7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h52e0eef0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'h49b5461b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'he5588064, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h1036af2b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h09631c3d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h471d1c43, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h014ebd7c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'h006962d0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'h47f24fbc, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'hce52670c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'h380006eb, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'h2e27645b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h26c15463, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'hcd6579da, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h11}); read_data = tb_read_data; success = success & assertEquals(32'h112b8e69, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h12}); read_data = tb_read_data; success = success & assertEquals(32'h4bfac5fd, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h13}); read_data = tb_read_data; success = success & assertEquals(32'h78abc67f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h14}); read_data = tb_read_data; success = success & assertEquals(32'hd4178004, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h15}); read_data = tb_read_data; success = success & assertEquals(32'hd012319a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h16}); read_data = tb_read_data; success = success & assertEquals(32'ha5aac5a3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h17}); read_data = tb_read_data; success = success & assertEquals(32'he93b8f9e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h18}); read_data = tb_read_data; success = success & assertEquals(32'hd3d70264, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h19}); read_data = tb_read_data; success = success & assertEquals(32'h70c7879f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1a}); read_data = tb_read_data; success = success & assertEquals(32'h7833d800, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1b}); read_data = tb_read_data; success = success & assertEquals(32'hdb211611, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1c}); read_data = tb_read_data; success = success & assertEquals(32'h0360f30d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1d}); read_data = tb_read_data; success = success & assertEquals(32'h545415e0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1e}); read_data = tb_read_data; success = success & assertEquals(32'h62a67262, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1f}); read_data = tb_read_data; success = success & assertEquals(32'h1ec14e9c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h20}); read_data = tb_read_data; success = success & assertEquals(32'h084ab43c, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_1024_M5783369654979853500 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_1024_M5783369654979853500 success.");
    end
  endtask // autogenerated_65537_1024_M5783369654979853500



  task autogenerated_65537_1024_5690344643830992838();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_1024_5690344643830992838");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h9ac5781c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hc33c6ddb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h1a1d545d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h8eab2b95); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h07feaad9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h40e08f09); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h044c1336); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'hd0de9ce1); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'ha369776e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'hdd8a9482); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'h756c57ac); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h2aac2e1f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'hc63d91b1); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'hf889a279); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'h7a85197a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'hfd08d55c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h11}, 32'h2573bc2b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h12}, 32'h11d17aa2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h13}, 32'hcc392762); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h14}, 32'hcd5a7e16); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h15}, 32'hfa6c1dff); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h16}, 32'ha0b22f02); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h17}, 32'h0ef2da59); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h18}, 32'h368e265d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h19}, 32'he4f6e8de); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1a}, 32'h22d25e49); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1b}, 32'h52e7b585); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1c}, 32'h202990f3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1d}, 32'h0bbd7b70); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1e}, 32'h74a34f3a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1f}, 32'he1d13154); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h20}, 32'h31cc405d); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h11}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h12}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h13}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h14}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h15}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h16}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h17}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h18}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h19}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h20}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h84515ae0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hf2d5a705); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h7734bf3a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h4da6eaa6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h1944b51d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'ha5fb3a57); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h5a440187); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h9355ec20); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h35ae2a85); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'h92ab3771); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h79cd9fd9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h387812d4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'h4a41b188); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h51991e7a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'hbaac1aa7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'h9620fad1); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h11}, 32'ha51bb587); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h12}, 32'h1a4a2f15); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h13}, 32'h2ee0ae47); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h14}, 32'ha8a82cc8); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h15}, 32'h97879869); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h16}, 32'h9c0597ba); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h17}, 32'h4e89218b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h18}, 32'h04c14860); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h19}, 32'h57918ed3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1a}, 32'h0d805dee); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1b}, 32'h874fc2de); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1c}, 32'h07fb38dd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1d}, 32'h2697ee98); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1e}, 32'h8291a940); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1f}, 32'hf7e6d200); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h20}, 32'h51420f4b); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000021); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000021); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h6c166ef7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h725077b5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h7b646265, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'hae4f4e58, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'hb70b41a5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h4dacd54e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h82c848db, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h1eb8ff36, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h7d6091cd, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'hbbba393b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'h7945a49e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'h33a0b667, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'h67508150, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'h5061e5fe, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h4c9645c1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'h9db4590a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h11}); read_data = tb_read_data; success = success & assertEquals(32'h4e4cfa72, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h12}); read_data = tb_read_data; success = success & assertEquals(32'h93853483, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h13}); read_data = tb_read_data; success = success & assertEquals(32'h8986535e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h14}); read_data = tb_read_data; success = success & assertEquals(32'h507ba8c5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h15}); read_data = tb_read_data; success = success & assertEquals(32'h88e0bd2d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h16}); read_data = tb_read_data; success = success & assertEquals(32'hfbf03956, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h17}); read_data = tb_read_data; success = success & assertEquals(32'h802a6b6a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h18}); read_data = tb_read_data; success = success & assertEquals(32'h8c962721, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h19}); read_data = tb_read_data; success = success & assertEquals(32'h7490df57, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1a}); read_data = tb_read_data; success = success & assertEquals(32'h2d737004, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1b}); read_data = tb_read_data; success = success & assertEquals(32'haa788bb1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1c}); read_data = tb_read_data; success = success & assertEquals(32'hd78b9270, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1d}); read_data = tb_read_data; success = success & assertEquals(32'ha40da8d4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1e}); read_data = tb_read_data; success = success & assertEquals(32'h176fa08d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1f}); read_data = tb_read_data; success = success & assertEquals(32'h20fb2d11, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h20}); read_data = tb_read_data; success = success & assertEquals(32'hefb5bc89, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_1024_5690344643830992838 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_1024_5690344643830992838 success.");
    end
  endtask // autogenerated_65537_1024_5690344643830992838



  task autogenerated_65537_1024_2419688117908792423();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_1024_2419688117908792423");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h8f0d849c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hf1cb1c5f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h0ef53bcf); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h2c31095b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'hfe679cd0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'hcbb66497); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'hcd84f77b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'h48710dc0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'h9ebb9553); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'ha16506d9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'h11aac7ff); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'hc30338f3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'h1cd31a07); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'h4b678697); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'hd2c05341); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'hc56c354a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h11}, 32'h14876355); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h12}, 32'hd8f9e574); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h13}, 32'h78492187); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h14}, 32'h0541c64c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h15}, 32'he923695c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h16}, 32'hd6ddde71); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h17}, 32'hd5f48b7b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h18}, 32'hb67409dd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h19}, 32'hd9d89a4a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1a}, 32'hd099f240); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1b}, 32'h54fb9df6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1c}, 32'ha034e202); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1d}, 32'h4b8481df); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1e}, 32'h17f22b6b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1f}, 32'h7233bad6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h20}, 32'h8cad8077); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h11}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h12}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h13}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h14}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h15}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h16}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h17}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h18}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h19}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h20}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h94f1063a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hfe669689); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h224774ac); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h311fd893); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h6583e32a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'h43c9f97f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h0d54ea60); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h744e6cb5); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h01ac9ca9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'h64ccd37b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h756b17de); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h0e24fa3d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'h1739416c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h93493d32); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'ha26d8bc8); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'h1027a85d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h11}, 32'he57c521d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h12}, 32'hd9d41f45); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h13}, 32'h70126f28); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h14}, 32'hbff39dab); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h15}, 32'h91f5a599); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h16}, 32'h5caa82e8); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h17}, 32'h4207209b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h18}, 32'h743456bd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h19}, 32'h381e192e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1a}, 32'he4ab62cc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1b}, 32'h36789c1f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1c}, 32'hc3c49c61); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1d}, 32'h47bd88a6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1e}, 32'h9b32ceb9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1f}, 32'h9a788152); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h20}, 32'hdf62ac99); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000021); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000021); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h84c0c985, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h1e26fac5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h93a4e93d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'h1ad34adb, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'h2b5f9401, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h7caddfe3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h74dbf2e8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'hb31ec0dc, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h96250563, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'ha0a20a13, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'h4f8ced49, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'h7607f54d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'h0ad713ed, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'hd7d48b94, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'hc4d1208c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'h384a21e3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h11}); read_data = tb_read_data; success = success & assertEquals(32'he0f8df83, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h12}); read_data = tb_read_data; success = success & assertEquals(32'hb99c81f1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h13}); read_data = tb_read_data; success = success & assertEquals(32'hb5de5696, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h14}); read_data = tb_read_data; success = success & assertEquals(32'h0ce6d530, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h15}); read_data = tb_read_data; success = success & assertEquals(32'h6a66a752, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h16}); read_data = tb_read_data; success = success & assertEquals(32'h647841d6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h17}); read_data = tb_read_data; success = success & assertEquals(32'hca48aa42, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h18}); read_data = tb_read_data; success = success & assertEquals(32'h6618294c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h19}); read_data = tb_read_data; success = success & assertEquals(32'h5b49cbd5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1a}); read_data = tb_read_data; success = success & assertEquals(32'hd7d56021, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1b}); read_data = tb_read_data; success = success & assertEquals(32'haad1fb73, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1c}); read_data = tb_read_data; success = success & assertEquals(32'h243eed3c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1d}); read_data = tb_read_data; success = success & assertEquals(32'h24dcfbd6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1e}); read_data = tb_read_data; success = success & assertEquals(32'hed2b7d6e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1f}); read_data = tb_read_data; success = success & assertEquals(32'h657a9158, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h20}); read_data = tb_read_data; success = success & assertEquals(32'h2ded4806, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_1024_2419688117908792423 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_1024_2419688117908792423 success.");
    end
  endtask // autogenerated_65537_1024_2419688117908792423



  task autogenerated_65537_2048_M4113938405113783334();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_2048_M4113938405113783334");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hda6e2e85); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h5824e207); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h45ee32dd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h6d7d0760); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'hb3a9c61b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h7be595c5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h85c1c49e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'he4d625b1); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'h20c56008); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h430c3cb7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'h2c540f38); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h66523dd2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'hfcf17832); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'h50582f71); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'h7eb2f07a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'h93345aa9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h11}, 32'h597ade09); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h12}, 32'h8b9c0941); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h13}, 32'h278830cd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h14}, 32'h37b1201c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h15}, 32'hecf2040c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h16}, 32'hc29ec523); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h17}, 32'h3a4a3bd8); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h18}, 32'h0367ed3d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h19}, 32'ha89eecb8); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1a}, 32'h76dc66e9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1b}, 32'h777dd7bd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1c}, 32'h7f62d55c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1d}, 32'ha8e8ba6f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1e}, 32'hf4489835); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1f}, 32'hcc9cf28c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h20}, 32'h3fdcaecd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h21}, 32'h51184699); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h22}, 32'ha258306a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h23}, 32'h1e647707); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h24}, 32'h54262b94); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h25}, 32'hb7a36505); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h26}, 32'h9aed9938); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h27}, 32'h4883f740); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h28}, 32'h057d9de7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h29}, 32'h3fc40a91); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2a}, 32'h7cf906af); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2b}, 32'h63fd0ec2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2c}, 32'hbfae9156); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2d}, 32'h86313b15); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2e}, 32'h7fe84a3f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2f}, 32'h48b807be); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h30}, 32'h49cf1056); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h31}, 32'h8126426c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h32}, 32'hc92988f4); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h33}, 32'h5200a85b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h34}, 32'h3b6aa13c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h35}, 32'he5140a99); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h36}, 32'h0169bde3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h37}, 32'h68047fef); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h38}, 32'hb0e8f397); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h39}, 32'hc9aad3fe); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3a}, 32'h214df4be); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3b}, 32'h398eae69); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3c}, 32'h3a1e03fe); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3d}, 32'h880ea533); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3e}, 32'h90d09c4c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3f}, 32'hc97a61c3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h40}, 32'h163180f7); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h11}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h12}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h13}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h14}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h15}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h16}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h17}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h18}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h19}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h20}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h21}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h22}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h23}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h24}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h25}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h26}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h27}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h28}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h29}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h30}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h31}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h32}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h33}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h34}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h35}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h36}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h37}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h38}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h39}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h40}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hfdcf0b56); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h2eb94cfa); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hca1d70c4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h97749cf2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'hcc141493); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'h0f3eda36); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'hc123b16c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h5a08f3a8); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'hfd9a6896); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'h7ac7b4c4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'hcda1ec80); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h47d43ad6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'hfdca1eb2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h11b7d2d7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'he837846f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'ha0b8297d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h11}, 32'hb48b429f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h12}, 32'h041ef3cc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h13}, 32'hb12cbce5); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h14}, 32'h161b9957); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h15}, 32'hea87f0b6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h16}, 32'ha22055c4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h17}, 32'h6fcbb797); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h18}, 32'h808621dd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h19}, 32'he6e504e6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1a}, 32'h327f49df); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1b}, 32'h561ecf33); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1c}, 32'hc711a492); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1d}, 32'h58550b7e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1e}, 32'h04581369); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1f}, 32'h09890ffb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h20}, 32'h25c28e6d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h21}, 32'h78978789); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h22}, 32'hc2764a9d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h23}, 32'h6007cd85); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h24}, 32'h8e5cc8d8); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h25}, 32'h6ee57b71); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h26}, 32'h0bc542fe); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h27}, 32'h6a14429d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h28}, 32'h6d5a0377); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h29}, 32'hf4d884f0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2a}, 32'h41b0219a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2b}, 32'hb57d9896); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2c}, 32'h93f5fe8d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2d}, 32'h39bb38cb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2e}, 32'ha298839e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2f}, 32'hcca69590); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h30}, 32'h6c7f38c3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h31}, 32'h085ef2f7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h32}, 32'h959d20ee); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h33}, 32'h0001c96f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h34}, 32'h7377fe9b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h35}, 32'h29e30d98); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h36}, 32'h465b0163); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h37}, 32'h6bbbc38d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h38}, 32'he714fadb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h39}, 32'h071620d4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3a}, 32'h746dc927); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3b}, 32'h31efcc22); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3c}, 32'hbe375b2d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3d}, 32'h923b17aa); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3e}, 32'h89cba654); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3f}, 32'h09ccf55e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h40}, 32'hdaf4214d); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000041); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000041); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h92da3497, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'hc72af709, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'hddb39762, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'h99b61f5b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'h54cdff4a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h96d4974b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'hac4e1b8c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h00c4f466, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h682f0260, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'h2e4e637a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'he8a3cf27, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'h8f9cb9de, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'hc7e880e0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'h75208b9b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h6d68e3d5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'h8f271c6c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h11}); read_data = tb_read_data; success = success & assertEquals(32'h493501e5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h12}); read_data = tb_read_data; success = success & assertEquals(32'h46abdcd1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h13}); read_data = tb_read_data; success = success & assertEquals(32'h0bbae3e4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h14}); read_data = tb_read_data; success = success & assertEquals(32'h116f8f6e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h15}); read_data = tb_read_data; success = success & assertEquals(32'h61a88b33, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h16}); read_data = tb_read_data; success = success & assertEquals(32'hfc3cfcc8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h17}); read_data = tb_read_data; success = success & assertEquals(32'hf0f8f1c3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h18}); read_data = tb_read_data; success = success & assertEquals(32'h44c71f4e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h19}); read_data = tb_read_data; success = success & assertEquals(32'hd4e749e3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1a}); read_data = tb_read_data; success = success & assertEquals(32'he028a544, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1b}); read_data = tb_read_data; success = success & assertEquals(32'h5998def5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1c}); read_data = tb_read_data; success = success & assertEquals(32'hcd29cb3c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1d}); read_data = tb_read_data; success = success & assertEquals(32'h669d63e5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1e}); read_data = tb_read_data; success = success & assertEquals(32'h8e05f9a6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1f}); read_data = tb_read_data; success = success & assertEquals(32'hcbbf8715, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h20}); read_data = tb_read_data; success = success & assertEquals(32'h455eb515, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h21}); read_data = tb_read_data; success = success & assertEquals(32'h53901215, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h22}); read_data = tb_read_data; success = success & assertEquals(32'heb7b8178, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h23}); read_data = tb_read_data; success = success & assertEquals(32'h2a877a68, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h24}); read_data = tb_read_data; success = success & assertEquals(32'h1dc80383, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h25}); read_data = tb_read_data; success = success & assertEquals(32'h8480910b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h26}); read_data = tb_read_data; success = success & assertEquals(32'h81a1cf06, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h27}); read_data = tb_read_data; success = success & assertEquals(32'h2214a756, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h28}); read_data = tb_read_data; success = success & assertEquals(32'h48fa3863, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h29}); read_data = tb_read_data; success = success & assertEquals(32'h776f6673, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2a}); read_data = tb_read_data; success = success & assertEquals(32'hc94fbcb9, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2b}); read_data = tb_read_data; success = success & assertEquals(32'hc83f469a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2c}); read_data = tb_read_data; success = success & assertEquals(32'ha06239de, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2d}); read_data = tb_read_data; success = success & assertEquals(32'hfa4ba04f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2e}); read_data = tb_read_data; success = success & assertEquals(32'h619bc8d0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2f}); read_data = tb_read_data; success = success & assertEquals(32'h512f47a7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h30}); read_data = tb_read_data; success = success & assertEquals(32'h6f97cb6c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h31}); read_data = tb_read_data; success = success & assertEquals(32'ha0dffcae, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h32}); read_data = tb_read_data; success = success & assertEquals(32'h758da9dd, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h33}); read_data = tb_read_data; success = success & assertEquals(32'h8798cb88, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h34}); read_data = tb_read_data; success = success & assertEquals(32'h2c272a49, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h35}); read_data = tb_read_data; success = success & assertEquals(32'h184c4af4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h36}); read_data = tb_read_data; success = success & assertEquals(32'h15efffba, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h37}); read_data = tb_read_data; success = success & assertEquals(32'he49fd324, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h38}); read_data = tb_read_data; success = success & assertEquals(32'h408062bb, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h39}); read_data = tb_read_data; success = success & assertEquals(32'h9439b750, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3a}); read_data = tb_read_data; success = success & assertEquals(32'h5a1b7adc, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3b}); read_data = tb_read_data; success = success & assertEquals(32'h414ec643, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3c}); read_data = tb_read_data; success = success & assertEquals(32'hdb05d719, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3d}); read_data = tb_read_data; success = success & assertEquals(32'hc4d61318, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3e}); read_data = tb_read_data; success = success & assertEquals(32'h6eb4b7ef, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3f}); read_data = tb_read_data; success = success & assertEquals(32'hb19dd6a5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h40}); read_data = tb_read_data; success = success & assertEquals(32'hf0663037, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_2048_M4113938405113783334 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_2048_M4113938405113783334 success.");
    end
  endtask // autogenerated_65537_2048_M4113938405113783334



  task autogenerated_65537_2048_1028944263296872045();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_2048_1028944263296872045");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'he3d684f5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h78dbbe30); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h5b33b58e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h249587b6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h0f2ec06f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h919383c0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h93bd14cd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'h41628255); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'ha4092a77); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h1ba3359b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'h1b6b020f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h8fc4a70b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'hb6fa5104); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'h66e605da); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'h44072fff); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'h28cfbaf6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h11}, 32'hea123cef); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h12}, 32'h44aacf63); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h13}, 32'ha1b0d16a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h14}, 32'h6ba7232c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h15}, 32'h2416bd91); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h16}, 32'ha88df1cc); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h17}, 32'hda43e9a6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h18}, 32'h467934ef); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h19}, 32'h8593fbfc); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1a}, 32'h8959a0b4); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1b}, 32'hc01fa978); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1c}, 32'hb7eb127a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1d}, 32'h94193525); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1e}, 32'h0cf3b4cc); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1f}, 32'ha296e5e0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h20}, 32'h8fd9255a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h21}, 32'hbaf9251d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h22}, 32'he1cb6425); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h23}, 32'hdea0c562); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h24}, 32'h78529f28); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h25}, 32'hf34e650d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h26}, 32'hec746673); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h27}, 32'hbaa44424); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h28}, 32'h3a28b70a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h29}, 32'hc23bee9a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2a}, 32'h2837faba); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2b}, 32'h74676824); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2c}, 32'h398caad3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2d}, 32'h65932ab6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2e}, 32'hc8d6681f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2f}, 32'h977bbc94); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h30}, 32'h4181d990); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h31}, 32'h4a626290); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h32}, 32'h9ee408fb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h33}, 32'h8fc0e59a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h34}, 32'h8625a36e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h35}, 32'hc109b7ab); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h36}, 32'hc041fde9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h37}, 32'h7fc735a1); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h38}, 32'he5182e3f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h39}, 32'hf2e20789); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3a}, 32'h68b9e50f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3b}, 32'h52314f43); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3c}, 32'h70835afb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3d}, 32'h109d897a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3e}, 32'h1cd5e4b0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3f}, 32'h105a697b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h40}, 32'h2980f41d); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h11}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h12}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h13}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h14}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h15}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h16}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h17}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h18}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h19}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h20}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h21}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h22}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h23}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h24}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h25}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h26}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h27}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h28}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h29}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h30}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h31}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h32}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h33}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h34}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h35}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h36}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h37}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h38}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h39}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h40}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hb958079c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hc541aa93); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h9efbf94f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'hd594e395); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h1d548c16); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'hb4abdf14); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'hbd8c82bb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'hb42802e3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h478addbd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'h7d4deeb3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h1fb79019); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h0c89d637); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'h69bc6f37); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h60a7a5b2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'h931937ad); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'hc33c1cf6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h11}, 32'h0192292c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h12}, 32'hd87cce69); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h13}, 32'he6e1f6ac); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h14}, 32'hc6cdc3a4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h15}, 32'h926658f0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h16}, 32'h43222677); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h17}, 32'hbd33b169); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h18}, 32'h4d098e0a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h19}, 32'h97be378a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1a}, 32'hc8800ea1); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1b}, 32'ha5a847b2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1c}, 32'h6380e436); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1d}, 32'hb49746eb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1e}, 32'h74f4dfed); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1f}, 32'h683d3c50); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h20}, 32'ha50c9be2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h21}, 32'h2e08a55c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h22}, 32'ha668f87b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h23}, 32'ha240d27d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h24}, 32'h495dbe9a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h25}, 32'h9de167c3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h26}, 32'had5675d3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h27}, 32'h931637c4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h28}, 32'h62d04f57); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h29}, 32'he04a77d6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2a}, 32'haf8a3c59); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2b}, 32'h35e65211); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2c}, 32'h611c0f27); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2d}, 32'h5085682f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2e}, 32'hccd2d106); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2f}, 32'h90834ea6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h30}, 32'hde8d76ec); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h31}, 32'h3751124a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h32}, 32'h82fcb5c1); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h33}, 32'h4d2bddf2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h34}, 32'h98dd163f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h35}, 32'h83a59ebe); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h36}, 32'h52c4ed71); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h37}, 32'h89e32d8b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h38}, 32'hbae2cb1b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h39}, 32'hb6aed3ee); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3a}, 32'ha49b1500); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3b}, 32'hec955140); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3c}, 32'h60a51366); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3d}, 32'h204979dc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3e}, 32'he768518a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3f}, 32'hf936206a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h40}, 32'h5895665f); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000041); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000041); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h0f4bdce4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h9040c526, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h526e3eef, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'hbeb59dae, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'hd68d2452, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'hca6f0f6e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h6da60fa5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'hb1be05c6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h8acfed77, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'hf59361a1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'h68a58c32, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'hb7ade887, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'hc9bfd4b3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'hef2c20ec, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h323866cf, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'hf3f24f7e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h11}); read_data = tb_read_data; success = success & assertEquals(32'h144f00cd, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h12}); read_data = tb_read_data; success = success & assertEquals(32'ha87bc5e3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h13}); read_data = tb_read_data; success = success & assertEquals(32'hdf58c6d9, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h14}); read_data = tb_read_data; success = success & assertEquals(32'h8c6aeb78, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h15}); read_data = tb_read_data; success = success & assertEquals(32'heaa9e854, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h16}); read_data = tb_read_data; success = success & assertEquals(32'h4a91f016, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h17}); read_data = tb_read_data; success = success & assertEquals(32'h84627af0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h18}); read_data = tb_read_data; success = success & assertEquals(32'hde4ee3a5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h19}); read_data = tb_read_data; success = success & assertEquals(32'h23dea3e7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1a}); read_data = tb_read_data; success = success & assertEquals(32'hbd7232db, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1b}); read_data = tb_read_data; success = success & assertEquals(32'hb0b5c34f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1c}); read_data = tb_read_data; success = success & assertEquals(32'hae56d8fd, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1d}); read_data = tb_read_data; success = success & assertEquals(32'hb83bb89b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1e}); read_data = tb_read_data; success = success & assertEquals(32'h73e5a46d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1f}); read_data = tb_read_data; success = success & assertEquals(32'h4118e8e7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h20}); read_data = tb_read_data; success = success & assertEquals(32'h2ee8f58a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h21}); read_data = tb_read_data; success = success & assertEquals(32'h210e6999, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h22}); read_data = tb_read_data; success = success & assertEquals(32'h580eac36, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h23}); read_data = tb_read_data; success = success & assertEquals(32'h6c0cec53, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h24}); read_data = tb_read_data; success = success & assertEquals(32'h7d72801e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h25}); read_data = tb_read_data; success = success & assertEquals(32'hcce7963e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h26}); read_data = tb_read_data; success = success & assertEquals(32'he3ec04fb, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h27}); read_data = tb_read_data; success = success & assertEquals(32'hf1a158b9, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h28}); read_data = tb_read_data; success = success & assertEquals(32'h545c66f8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h29}); read_data = tb_read_data; success = success & assertEquals(32'h64640964, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2a}); read_data = tb_read_data; success = success & assertEquals(32'h776e3faa, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2b}); read_data = tb_read_data; success = success & assertEquals(32'h43663db0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2c}); read_data = tb_read_data; success = success & assertEquals(32'h8560fe82, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2d}); read_data = tb_read_data; success = success & assertEquals(32'hba3c4aea, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2e}); read_data = tb_read_data; success = success & assertEquals(32'h7e6c4af5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2f}); read_data = tb_read_data; success = success & assertEquals(32'h8e32f713, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h30}); read_data = tb_read_data; success = success & assertEquals(32'h2875ab8b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h31}); read_data = tb_read_data; success = success & assertEquals(32'h73dbb402, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h32}); read_data = tb_read_data; success = success & assertEquals(32'h0ff89a7e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h33}); read_data = tb_read_data; success = success & assertEquals(32'hf7e71598, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h34}); read_data = tb_read_data; success = success & assertEquals(32'h27eac398, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h35}); read_data = tb_read_data; success = success & assertEquals(32'h8e004902, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h36}); read_data = tb_read_data; success = success & assertEquals(32'hd3bb7df3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h37}); read_data = tb_read_data; success = success & assertEquals(32'hbf6107f0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h38}); read_data = tb_read_data; success = success & assertEquals(32'h6a7dda9e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h39}); read_data = tb_read_data; success = success & assertEquals(32'hb56a8e96, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3a}); read_data = tb_read_data; success = success & assertEquals(32'h2118c8e7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3b}); read_data = tb_read_data; success = success & assertEquals(32'h0b02885d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3c}); read_data = tb_read_data; success = success & assertEquals(32'h83efc0e7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3d}); read_data = tb_read_data; success = success & assertEquals(32'h399d22a8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3e}); read_data = tb_read_data; success = success & assertEquals(32'hc86ecb15, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3f}); read_data = tb_read_data; success = success & assertEquals(32'heddd585f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h40}); read_data = tb_read_data; success = success & assertEquals(32'hf09591c0, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_2048_1028944263296872045 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_2048_1028944263296872045 success.");
    end
  endtask // autogenerated_65537_2048_1028944263296872045



  task autogenerated_65537_2048_M4248726279996728686();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_65537_2048_M4248726279996728686");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'he8a2829e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hf2a6ccb4); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'hc1c5e54f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h9aa899a1); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h19e7b71d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h83ea0e80); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h18871ecb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'hb17d526d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'he778777f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h3d37cc46); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'hd7df88b2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'he5b0ad8a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'hcbcfd49b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'hbdfbcb7a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'hc838468c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'h6529d118); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h11}, 32'h5d40cde6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h12}, 32'h305db565); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h13}, 32'hbfcfd9c5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h14}, 32'h1786bee7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h15}, 32'hc1fb680f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h16}, 32'h7103332e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h17}, 32'h22943088); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h18}, 32'hcc997a91); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h19}, 32'hc0a911c7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1a}, 32'h56127fd7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1b}, 32'habc7abf9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1c}, 32'hb5f6b351); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1d}, 32'h3501b65b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1e}, 32'h47e4a411); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1f}, 32'h6c672e50); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h20}, 32'h163d8209); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h21}, 32'haa02e4d6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h22}, 32'h0f5a8b4f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h23}, 32'h13a1a9e6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h24}, 32'h39213fb0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h25}, 32'h41b9791a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h26}, 32'hf6d3b355); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h27}, 32'h6fd8a48e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h28}, 32'ha45c15cd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h29}, 32'hd8a52683); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2a}, 32'h0f28c7ae); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2b}, 32'h320102c3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2c}, 32'h8dfef035); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2d}, 32'h6838f6df); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2e}, 32'hcd29cb1a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2f}, 32'hf850076e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h30}, 32'h8dcf3fab); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h31}, 32'hadfbbd9e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h32}, 32'hdc9670e8); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h33}, 32'h888dc31d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h34}, 32'h94bca763); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h35}, 32'h0c57d05d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h36}, 32'h2e7d920e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h37}, 32'h587b72c7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h38}, 32'h1d7dc4d2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h39}, 32'hb00aff3d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3a}, 32'h536efdfb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3b}, 32'h5630db60); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3c}, 32'ha2e85cf9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3d}, 32'hf5c90653); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3e}, 32'h0d14262e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3f}, 32'he54efa65); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h40}, 32'h51af9b3d); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h11}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h12}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h13}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h14}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h15}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h16}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h17}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h18}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h19}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h20}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h21}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h22}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h23}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h24}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h25}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h26}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h27}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h28}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h29}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h30}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h31}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h32}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h33}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h34}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h35}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h36}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h37}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h38}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h39}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3a}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3b}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3c}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3d}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3e}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3f}, 32'h00000000); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h40}, 32'h00010001); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000000); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h8306f344); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h4cb9abbc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h0440401b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h14000671); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'hcdba9a37); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'h1c635012); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h96f61217); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h493d2ea2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h2e2e05b2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'hd18f6deb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h668e3c73); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h8219014f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'h36064b4d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h3fde88de); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'h1448cb3d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'he872888b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h11}, 32'h168ffc4e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h12}, 32'h4c6f6f8b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h13}, 32'hcede3550); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h14}, 32'hd6562fbe); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h15}, 32'h09d3e510); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h16}, 32'h0aea5ab5); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h17}, 32'hd23c38cd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h18}, 32'h18769962); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h19}, 32'h70cc21c1); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1a}, 32'h082d5abb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1b}, 32'h327428c6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1c}, 32'h54280113); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1d}, 32'h3f162c9d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1e}, 32'he44083f7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1f}, 32'hd6ff9b9b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h20}, 32'hc8b2ad8e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h21}, 32'h98beb23b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h22}, 32'h2560b917); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h23}, 32'hc79031c4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h24}, 32'h35c6fade); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h25}, 32'hb41fe0c0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h26}, 32'h47282b64); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h27}, 32'haaebd3c6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h28}, 32'h1a6885a6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h29}, 32'h0ae3ee01); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2a}, 32'h16485afd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2b}, 32'h899a0e18); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2c}, 32'h25bba14e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2d}, 32'ha9925815); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2e}, 32'h3f3fbfd6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2f}, 32'hd97655e4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h30}, 32'he65a8021); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h31}, 32'he95c11a7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h32}, 32'h230331d9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h33}, 32'hb84fac9f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h34}, 32'hc53ea152); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h35}, 32'h42ee499a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h36}, 32'hee9c6182); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h37}, 32'h75302cf6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h38}, 32'h36589d9e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h39}, 32'h7b855a26); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3a}, 32'he8143e32); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3b}, 32'h550bb8b4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3c}, 32'h2a602f16); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3d}, 32'h06a60831); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3e}, 32'h0a3f1165); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3f}, 32'h94cc0abe); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h40}, 32'hc888007d); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000041); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000041); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h4ef4af85, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h33d981a1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h223ac128, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'hecd4f6de, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'h83809d8d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h2d95d75b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h2ae5c9d0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h92780c00, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h0c0f774e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'hab35a6bb, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'h4922a554, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'hbfb578ce, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'h4a72367e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'hd2879fda, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h035a6da4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'hb714e84f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h11}); read_data = tb_read_data; success = success & assertEquals(32'hd52ac930, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h12}); read_data = tb_read_data; success = success & assertEquals(32'hb8ccb104, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h13}); read_data = tb_read_data; success = success & assertEquals(32'hb8af2869, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h14}); read_data = tb_read_data; success = success & assertEquals(32'h83772d25, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h15}); read_data = tb_read_data; success = success & assertEquals(32'h428c2e63, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h16}); read_data = tb_read_data; success = success & assertEquals(32'h74ef9b9e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h17}); read_data = tb_read_data; success = success & assertEquals(32'h2ccc35b0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h18}); read_data = tb_read_data; success = success & assertEquals(32'h21c3697c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h19}); read_data = tb_read_data; success = success & assertEquals(32'he7c9a306, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1a}); read_data = tb_read_data; success = success & assertEquals(32'h27964c2c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1b}); read_data = tb_read_data; success = success & assertEquals(32'hbc794695, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1c}); read_data = tb_read_data; success = success & assertEquals(32'h46ea2659, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1d}); read_data = tb_read_data; success = success & assertEquals(32'hb7c47ec8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1e}); read_data = tb_read_data; success = success & assertEquals(32'h81cc2a97, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1f}); read_data = tb_read_data; success = success & assertEquals(32'hcf8080e6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h20}); read_data = tb_read_data; success = success & assertEquals(32'hab2f9aa1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h21}); read_data = tb_read_data; success = success & assertEquals(32'h0171a861, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h22}); read_data = tb_read_data; success = success & assertEquals(32'h96cb9a66, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h23}); read_data = tb_read_data; success = success & assertEquals(32'hf6818959, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h24}); read_data = tb_read_data; success = success & assertEquals(32'hc9c06f8b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h25}); read_data = tb_read_data; success = success & assertEquals(32'he4356567, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h26}); read_data = tb_read_data; success = success & assertEquals(32'h516d7820, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h27}); read_data = tb_read_data; success = success & assertEquals(32'he9deacc7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h28}); read_data = tb_read_data; success = success & assertEquals(32'hdc2f95a2, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h29}); read_data = tb_read_data; success = success & assertEquals(32'h22dfceef, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2a}); read_data = tb_read_data; success = success & assertEquals(32'he40cfbc8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2b}); read_data = tb_read_data; success = success & assertEquals(32'h903dee50, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2c}); read_data = tb_read_data; success = success & assertEquals(32'h6240fbb4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2d}); read_data = tb_read_data; success = success & assertEquals(32'h4a7779cf, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2e}); read_data = tb_read_data; success = success & assertEquals(32'h8c0b552d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2f}); read_data = tb_read_data; success = success & assertEquals(32'h52a4a22d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h30}); read_data = tb_read_data; success = success & assertEquals(32'h91b0750e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h31}); read_data = tb_read_data; success = success & assertEquals(32'hed340c90, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h32}); read_data = tb_read_data; success = success & assertEquals(32'h335d2997, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h33}); read_data = tb_read_data; success = success & assertEquals(32'h4a573c3c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h34}); read_data = tb_read_data; success = success & assertEquals(32'hb449ad24, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h35}); read_data = tb_read_data; success = success & assertEquals(32'hc9a9e144, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h36}); read_data = tb_read_data; success = success & assertEquals(32'h2ce699cb, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h37}); read_data = tb_read_data; success = success & assertEquals(32'h9d099727, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h38}); read_data = tb_read_data; success = success & assertEquals(32'h847ff56f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h39}); read_data = tb_read_data; success = success & assertEquals(32'hd7a3aff0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3a}); read_data = tb_read_data; success = success & assertEquals(32'h711c919e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3b}); read_data = tb_read_data; success = success & assertEquals(32'h4c022f39, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3c}); read_data = tb_read_data; success = success & assertEquals(32'hed9498e8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3d}); read_data = tb_read_data; success = success & assertEquals(32'h5ae99593, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3e}); read_data = tb_read_data; success = success & assertEquals(32'h277ef4ce, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3f}); read_data = tb_read_data; success = success & assertEquals(32'h2ca8e150, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h40}); read_data = tb_read_data; success = success & assertEquals(32'h3995f0b9, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_65537_2048_M4248726279996728686 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_65537_2048_M4248726279996728686 success.");
    end
  endtask // autogenerated_65537_2048_M4248726279996728686



  task autogenerated_BASIC_M4962768465676381896();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M4962768465676381896");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h946473e1); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h0e85e74f); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h70754797); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h7761ed4f, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M4962768465676381896 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M4962768465676381896 success.");
    end
  endtask // autogenerated_BASIC_M4962768465676381896



  task autogenerated_BASIC_8982867242010371843();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_8982867242010371843");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h6eb4ac2d); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'hbb200e41); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h27347dc3); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h87d16204, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_8982867242010371843 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_8982867242010371843 success.");
    end
  endtask // autogenerated_BASIC_8982867242010371843



  task autogenerated_BASIC_5090788032873075449();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_5090788032873075449");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h9e504a03); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h9bc057ef); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hc8b53fe5); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000001, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'hc1a6494c, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_5090788032873075449 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_5090788032873075449 success.");
    end
  endtask // autogenerated_BASIC_5090788032873075449



  task autogenerated_BASIC_8448510918869952728();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_8448510918869952728");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h73f7b309); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h91c10f7f); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h4be322c9); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h9a155286, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_8448510918869952728 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_8448510918869952728 success.");
    end
  endtask // autogenerated_BASIC_8448510918869952728



  task autogenerated_BASIC_4036237668019554146();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_4036237668019554146");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hd0f3961d); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'hcdbc9c9d); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h30367d5b); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000001, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h15a9c15d, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_4036237668019554146 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_4036237668019554146 success.");
    end
  endtask // autogenerated_BASIC_4036237668019554146



  task autogenerated_BASIC_M8925041444689012509();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M8925041444689012509");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h34130e17); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'hf45e52c9); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h9cb5c68d); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h7c129d37, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M8925041444689012509 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M8925041444689012509 success.");
    end
  endtask // autogenerated_BASIC_M8925041444689012509



  task autogenerated_BASIC_M5713608137760059379();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M5713608137760059379");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h77505dbd); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'hdb808627); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'had1fed09); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000001, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h842cd733, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M5713608137760059379 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M5713608137760059379 success.");
    end
  endtask // autogenerated_BASIC_M5713608137760059379



  task autogenerated_BASIC_6816968587684568101();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_6816968587684568101");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h3272b6ef); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h2cb6c09b); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hefbc64fd); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000001, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h59c3b603, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_6816968587684568101 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_6816968587684568101 success.");
    end
  endtask // autogenerated_BASIC_6816968587684568101



  task autogenerated_BASIC_4168013900853404774();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_4168013900853404774");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h3c20bbcf); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'ha495d8ab); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h75ddb9ef); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000001, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h1413eac7, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_4168013900853404774 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_4168013900853404774 success.");
    end
  endtask // autogenerated_BASIC_4168013900853404774



  task autogenerated_BASIC_M8394821325674331878();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M8394821325674331878");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h93d3d0d3); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h43c2dfef); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h00000001); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h7443cbf1); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000002); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000002); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h00000000, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'hc2eda7c3, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M8394821325674331878 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M8394821325674331878 success.");
    end
  endtask // autogenerated_BASIC_M8394821325674331878



  task autogenerated_BASIC_M2919828800172604435();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M2919828800172604435");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h3d746ec5); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h3f7ea6d5); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h29b6675f); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h040c43d8, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M2919828800172604435 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M2919828800172604435 success.");
    end
  endtask // autogenerated_BASIC_M2919828800172604435



  task autogenerated_BASIC_4770912732078070597();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_4770912732078070597");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h200c0f45); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h24774bab); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h234ca073); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h14505436, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_4770912732078070597 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_4770912732078070597 success.");
    end
  endtask // autogenerated_BASIC_4770912732078070597



  task autogenerated_BASIC_3593487472385409519();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_3593487472385409519");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h248819d1); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h2ad2b6ed); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h269cc6bf); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h0f09d466, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_3593487472385409519 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_3593487472385409519 success.");
    end
  endtask // autogenerated_BASIC_3593487472385409519



  task autogenerated_BASIC_4981749054780354961();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_4981749054780354961");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h27bec4e7); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h36fe540f); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h25a46d61); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h0bab2269, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_4981749054780354961 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_4981749054780354961 success.");
    end
  endtask // autogenerated_BASIC_4981749054780354961



  task autogenerated_BASIC_7702189670289360961();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_7702189670289360961");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h302def29); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h25b9c233); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h33af5461); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h0229dc08, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_7702189670289360961 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_7702189670289360961 success.");
    end
  endtask // autogenerated_BASIC_7702189670289360961



  task autogenerated_BASIC_M5169634701858105792();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M5169634701858105792");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h240d8cf5); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h2a6a7381); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h3471d1e9); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h244dec19, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M5169634701858105792 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M5169634701858105792 success.");
    end
  endtask // autogenerated_BASIC_M5169634701858105792



  task autogenerated_BASIC_6469444563916025786();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_6469444563916025786");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h3cc9270b); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h27858fdd); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h21e65001); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h17200d8c, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_6469444563916025786 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_6469444563916025786 success.");
    end
  endtask // autogenerated_BASIC_6469444563916025786



  task autogenerated_BASIC_M2453278165832221565();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M2453278165832221565");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h30ca6ceb); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h212c387b); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h2e07a7bb); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h0fc15a1f, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M2453278165832221565 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M2453278165832221565 success.");
    end
  endtask // autogenerated_BASIC_M2453278165832221565



  task autogenerated_BASIC_M1847183855567461116();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M1847183855567461116");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h3d02c5a1); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h35f12b45); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h32f0b03f); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h2340f96f, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M1847183855567461116 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M1847183855567461116 success.");
    end
  endtask // autogenerated_BASIC_M1847183855567461116



  task autogenerated_BASIC_M7037130911981370263();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M7037130911981370263");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h2692d1cd); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h3b21ef8d); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h2042c76d); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000001); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000001); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h1b753aea, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M7037130911981370263 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M7037130911981370263 success.");
    end
  endtask // autogenerated_BASIC_M7037130911981370263



  task autogenerated_BASIC_5073338267670769216();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_5073338267670769216");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h3028983f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hdc9bdc25); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'ha3fdfeda); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h283f4463); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h29493211); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'hc4252db0); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h7775443d); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h13e1d929); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h2fb9ba2f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'ha485d5f7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h3c6652c9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h670fdbfd); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h2f45cdd6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h23f0e6f2, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'haa4bd5d8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h6297da06, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_5073338267670769216 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_5073338267670769216 success.");
    end
  endtask // autogenerated_BASIC_5073338267670769216



  task autogenerated_BASIC_M1841989679506188752();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M1841989679506188752");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h29462882); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h12caa2d5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hb80e1c66); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h1006807f); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h3285c343); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h2acbcb0f); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h4d023228); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h2ecc73db); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h267d2f2e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h51c216a7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hda752ead); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h48d22d89); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h0ddc404d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h91600596, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h7425a8d8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'ha066ca56, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M1841989679506188752 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M1841989679506188752 success.");
    end
  endtask // autogenerated_BASIC_M1841989679506188752



  task autogenerated_BASIC_M3339729654500648482();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M3339729654500648482");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h2963efb9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'hc6f5d260); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'ha2d0fe74); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h49726b57); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h2f55c103); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'hbace4bf1); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h2ab9fac2); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h30aec7d3); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h376cf9ae); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hd9e988e8); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hbd995f5c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hdeec42f5); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h0ce8cff7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h9f564e2c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h1b61e3d9, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h717db9ef, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M3339729654500648482 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M3339729654500648482 success.");
    end
  endtask // autogenerated_BASIC_M3339729654500648482



  task autogenerated_BASIC_M6837928193394880512();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M6837928193394880512");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h2a9283cc); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h5999f49d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hf8cf6ab2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h5f47bf25); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h2c7564a0); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h2d1fcda1); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h2825318a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'hae23c271); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h32b892f9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h096c5ada); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h43918370); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h8398c7e3); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h27cf8839, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h94004d82, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'ha0d69d86, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h3f61a929, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M6837928193394880512 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M6837928193394880512 success.");
    end
  endtask // autogenerated_BASIC_M6837928193394880512



  task autogenerated_BASIC_M7333111649825079555();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M7333111649825079555");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h246fa2ec); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h405f234d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h39b93e77); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'hf16bcc91); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h2807eb7a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h646df633); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'heaa95a21); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h85252adf); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h2cdd3307); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h782e5711); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h584f179b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h011087df); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h02d6e42e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h46e2d304, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h435170c1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h9f344f83, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M7333111649825079555 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M7333111649825079555 success.");
    end
  endtask // autogenerated_BASIC_M7333111649825079555



  task autogenerated_BASIC_480186175131589607();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_480186175131589607");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h300a5cf7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h269f6369); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h02e025cb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'haf16fcfd); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h2cc4b1c0); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h9205a8b4); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'hbc130ee2); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h923f1f3f); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h2cd376d5); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hd9e3b080); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h2533288a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hd4b9bb37); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h0ae9c475, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'hf4fb4c63, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'hcf2c4f56, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h902eba0c, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_480186175131589607 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_480186175131589607 success.");
    end
  endtask // autogenerated_BASIC_480186175131589607



  task autogenerated_BASIC_M5239159917778665002();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M5239159917778665002");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h3eaed5af); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'ha287db7e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h4ff07fee); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h9bbda80b); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h3c077d49); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'hf3a131ab); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h6289042a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'hc15083cb); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h344b8538); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hcf4f2576); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hd28c1c52); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hc83a8199); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h15028046, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h5c12d235, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h7580fd1b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h6bc76b24, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M5239159917778665002 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M5239159917778665002 success.");
    end
  endtask // autogenerated_BASIC_M5239159917778665002



  task autogenerated_BASIC_228752064885223799();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_228752064885223799");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h3904d7ab); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h13937a4f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h926856d1); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h6bdda621); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h3d360083); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'ha50eaf0e); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'hffce2df2); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'hb1f51cef); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h2d32376f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h205555b3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h2c9daf8c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'he2b7cf81); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h08836692, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'he6398828, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h1eeccd57, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h2c231153, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_228752064885223799 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_228752064885223799 success.");
    end
  endtask // autogenerated_BASIC_228752064885223799



  task autogenerated_BASIC_856940511857911599();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_856940511857911599");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h23e80223); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h52b700ee); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h6cb8a294); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h47c6fac9); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h253cebdb); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'hcc78dcb4); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h925682b3); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h490c424b); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h2f2885eb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h67987cee); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h717298bd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h7a1baf7b); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h2bb0b86c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'hc854652b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h2b2bce27, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'hd2595a8e, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_856940511857911599 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_856940511857911599 success.");
    end
  endtask // autogenerated_BASIC_856940511857911599



  task autogenerated_BASIC_M6501553661140603953();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M6501553661140603953");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h287e9711); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h4d346dab); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h3ff5e6da); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'ha93edebd); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h3658192a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h4b5fac3f); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h9a78bc81); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h5ac8c667); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h238cd95d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h298ee5e1); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h320323da); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h0a46ec21); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000004); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000004); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h0415fef6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h5fc81702, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h8be83fd4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h4c7fbf24, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M6501553661140603953 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M6501553661140603953 success.");
    end
  endtask // autogenerated_BASIC_M6501553661140603953



  task autogenerated_BASIC_M8496483018338900149();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M8496483018338900149");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h3b4511d5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h5f61da31); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h4bf252e0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h3962f93c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h590171d0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'hda31097f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h0f73fee3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h0ba1b379); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'h514b7d8f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'h1e337cf9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h733512ac); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'h4f5b0b52); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h40762697); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'hb3a30c84); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'h5563b4db); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'h59f7cef1); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h271cb7c4); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h11f07a63); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h1df850e7); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h8bf6df66); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h7bc8fa0e); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'ha51002ce); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'hf16946c5); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h96916dc7); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'hba1681b1); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h5ca395ab); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h7839780d); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'hc5e760c3); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h578af4f9); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'hffbbbd8c); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h8576c8fc); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h518012a7); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h3c0f154d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h7fc7750a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h03eb8968); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hfbde501a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h63848fe5); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'hdcd7d883); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'h5131c9f9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'ha9ca3399); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'hba581205); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h4cf86f2a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'hed928b92); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h13a0e90f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h5b24c81a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'hf4ac077c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h68b8ac70); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'hc58961fd); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000010); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000010); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h30d0a0c1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h1be7b00f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'h9ed921c6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'h7a7f9a87, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'hb8ed7f88, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'hd81f20d5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'hb3ba9839, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h38dfdfb4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h70b1927c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'ha4b9487b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'h8d8d7e2c, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'hc706e737, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'h17e9c280, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'hbec0006a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'heea7dc97, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h4f5badc9, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M8496483018338900149 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M8496483018338900149 success.");
    end
  endtask // autogenerated_BASIC_M8496483018338900149



  task autogenerated_BASIC_6145567102166328515();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_6145567102166328515");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h23446522); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h9185c81e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'h09283a50); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h82c1f517); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'hd00d3159); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h846c2c99); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'h261d1dcb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'hde183d66); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'h98f8a990); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'hd295bd50); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h09ef8644); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'hadcf9cdb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h5eec13a3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'h92baa627); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'h18caa215); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'h8836480f); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h397f2b38); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'ha95cc0bc); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'hc13b26cf); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'ha20dda3c); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'hf8801c39); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h00731abe); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h2ad0afc4); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'hdb247141); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'hc29b5a2d); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h9e51a3ed); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'hcf364a51); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h90b761d5); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'hfa0624d3); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h3a0b27c7); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'ha36bc66c); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'h6423efd3); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h3ad2464f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h75da362c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h6e5c37b4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h432cc6b7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'h6f48b57c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'hebb87e14); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'h0a3d3f4d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'hfa4c32c0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h165a5892); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h742f720d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'h8b4e1b43); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h281d5390); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'hff2f77dc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'h698dbc05); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'hdee97a68); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'hde2c176d); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000010); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000010); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h083aa822, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h7c70341a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'ha2cbc9a8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'hd116bc41, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'h79a81ba7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'h584c91c8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h5b87c314, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'hc5e6f4f9, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h601ebead, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h054bf14b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'h65b48a4a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'hf8aa2700, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'ha765ee1d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'hb6c638cd, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'h7e529f23, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h0d4adfff, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_6145567102166328515 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_6145567102166328515 success.");
    end
  endtask // autogenerated_BASIC_6145567102166328515



  task autogenerated_BASIC_7216348574014690328();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_7216348574014690328");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h35baa860); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h4e47ad49); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hc6c4a7c0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h7857335b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'h9b81d24f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h7be86e34); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'hf84f7560); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h484b20db); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'hb83b4f9e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'h694c6987); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h7d3232f5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'h18ee8603); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h94eca5ef); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'h5179ef69); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'hf6600efb); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'hfc71deab); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'hdb939552); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h11}, 32'h642db1e0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h12}, 32'h78e11e39); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h13}, 32'h924f0dbd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h14}, 32'hdb225803); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h15}, 32'h449bbb35); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h16}, 32'hfc40ee05); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h17}, 32'h9b19931c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h18}, 32'h8b8af884); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h19}, 32'hb5f96476); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1a}, 32'hf97ad419); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1b}, 32'hcc7543f9); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1c}, 32'hce25ed83); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1d}, 32'h94da3499); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1e}, 32'h4f37f331); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1f}, 32'he64e7799); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h3a7570f2); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'h38cb0f2f); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'h2e6c8989); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'hcf7c2665); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'ha0fce3d0); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h12c7a8eb); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h40fab1ea); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h39eb4809); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'h822fa6cc); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h4ef9d604); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h2ca1cd3b); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'ha9b23cdb); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h17e823ce); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'h5fea5198); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h1ab12946); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'hcec748b5); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h752a3a6f); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h11}, 32'h73421a9a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h12}, 32'h7138d7a4); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h13}, 32'ha47327c0); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h14}, 32'h17475543); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h15}, 32'he841c19a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h16}, 32'h3085410a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h17}, 32'h06438b4c); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h18}, 32'he0d4b918); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h19}, 32'hfeccca17); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1a}, 32'h9ed86072); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1b}, 32'h86db4a93); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1c}, 32'h60c7d437); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1d}, 32'hcdfe77e3); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1e}, 32'h2631f264); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1f}, 32'h80c9b645); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h34d90901); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'hf192009c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'hc34f345f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'h63f592b2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'haba32d7a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h161d1510); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'h2c264dec); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h07306f1d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h3e61c031); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'hacd4eba0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'hff1318ff); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h09a78cf4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h97bace67); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'hc8fcecf4); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h3b3901a3); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'h5d447957); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'hc0397708); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h11}, 32'h7e7e48f9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h12}, 32'h571db58a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h13}, 32'h80d65921); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h14}, 32'h68a025e0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h15}, 32'h4f85f776); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h16}, 32'haa8450c7); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h17}, 32'h15c42f52); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h18}, 32'he65507f2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h19}, 32'hdfeed660); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1a}, 32'h0db8eddb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1b}, 32'hb1e48d93); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1c}, 32'h7e314a2f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1d}, 32'hea81ccb1); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1e}, 32'hbe22cc03); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1f}, 32'hf2928621); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000020); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000020); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h14c07087, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h3e92a437, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'hbfd5a5b3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'hec017ed5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'hacf23e12, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'h6e48a51f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'he1fdbde9, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h43fade6b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h98935c7a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'haff9b1e5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'h3adaa120, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'hcbaa5af5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'h344fabb2, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'h8d2987c7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'hfb83d342, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h3f85bbfc, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'hc30e755a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h11}); read_data = tb_read_data; success = success & assertEquals(32'h37f20fa4, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h12}); read_data = tb_read_data; success = success & assertEquals(32'h7fb5621b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h13}); read_data = tb_read_data; success = success & assertEquals(32'hcd1cef03, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h14}); read_data = tb_read_data; success = success & assertEquals(32'h664ccb56, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h15}); read_data = tb_read_data; success = success & assertEquals(32'hce0a28b9, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h16}); read_data = tb_read_data; success = success & assertEquals(32'ha9cbdd51, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h17}); read_data = tb_read_data; success = success & assertEquals(32'had12eb24, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h18}); read_data = tb_read_data; success = success & assertEquals(32'hacc08c8d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h19}); read_data = tb_read_data; success = success & assertEquals(32'h5d9fe7f5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1a}); read_data = tb_read_data; success = success & assertEquals(32'h018c1e1e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1b}); read_data = tb_read_data; success = success & assertEquals(32'h2115bba8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1c}); read_data = tb_read_data; success = success & assertEquals(32'h22b52262, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1d}); read_data = tb_read_data; success = success & assertEquals(32'haee3bf8a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1e}); read_data = tb_read_data; success = success & assertEquals(32'h91824a22, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1f}); read_data = tb_read_data; success = success & assertEquals(32'hde48a1f3, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_7216348574014690328 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_7216348574014690328 success.");
    end
  endtask // autogenerated_BASIC_7216348574014690328



  task autogenerated_BASIC_M5663191947183200100();
    reg [31 : 0] read_data;
    begin
      success = 32'h1;
      tc_ctr = tc_ctr + 1;
      $display("autogenerated_BASIC_M5663191947183200100");

      write_word({MESSAGE_PREFIX, 8'h00}, 32'h21558179); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h01}, 32'h3e2914b1); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h02}, 32'hefe95957); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h03}, 32'h965fdead); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h04}, 32'he766d8fc); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h05}, 32'h136eadf4); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h06}, 32'ha6106a2a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h07}, 32'h88b2df7e); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h08}, 32'he0b0eaae); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h09}, 32'h2c17946a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0a}, 32'h6f5b5563); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0b}, 32'h228052ae); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0c}, 32'h7fc40d80); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0d}, 32'hf81354db); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0e}, 32'hfceecd1a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h0f}, 32'ha5e4c97d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h10}, 32'h433ecfcd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h11}, 32'hc20d1e4d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h12}, 32'h2a748fe3); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h13}, 32'h1d9e63f0); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h14}, 32'hdc6c25d6); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h15}, 32'hdae5c8be); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h16}, 32'h1d8c5431); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h17}, 32'hb1d7d270); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h18}, 32'hed5b2566); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h19}, 32'h1463b0fd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1a}, 32'ha9e26cf7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1b}, 32'h3dd6fbd7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1c}, 32'h1347c8f7); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1d}, 32'h76c2cc37); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1e}, 32'hf382b786); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h1f}, 32'h1d5ac517); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h20}, 32'h26b96692); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h21}, 32'h2c1fe6f8); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h22}, 32'h5852dbf8); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h23}, 32'h4bcabda2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h24}, 32'hbedb2f5f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h25}, 32'hbfe58158); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h26}, 32'h8cd5d15f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h27}, 32'hac7c7f4c); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h28}, 32'hf8ba47d2); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h29}, 32'h86c6571d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2a}, 32'h06a4760b); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2b}, 32'ha6afa0e1); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2c}, 32'h7a819f62); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2d}, 32'h5cdbfe15); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2e}, 32'h9b2d10b5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h2f}, 32'hf508b1fd); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h30}, 32'hb3f0462a); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h31}, 32'h92f45a64); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h32}, 32'h69b6ec58); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h33}, 32'hbfad8fab); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h34}, 32'h6799260f); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h35}, 32'h27415db5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h36}, 32'hf6ac7832); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h37}, 32'he547826d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h38}, 32'h6a9806a5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h39}, 32'h36c62a88); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3a}, 32'h98bee14d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3b}, 32'h9b8c2648); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3c}, 32'habdbbd3d); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3d}, 32'haf59eea1); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3e}, 32'h164eacb5); //TEMPLATE_MESSAGE_VALES
      write_word({MESSAGE_PREFIX, 8'h3f}, 32'h3a18e427); //TEMPLATE_MESSAGE_VALES
      write_word({EXPONENT_PREFIX, 8'h00}, 32'h2519837b); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h01}, 32'he73a9031); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h02}, 32'he241606d); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h03}, 32'h21e70fa2); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h04}, 32'h7881f254); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h05}, 32'h4e60831d); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h06}, 32'h266f408e); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h07}, 32'h4a83e6ed); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h08}, 32'ha7741995); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h09}, 32'h32b477ba); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0a}, 32'h91bdf5d0); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0b}, 32'h4acd7a06); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0c}, 32'h51e344b9); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0d}, 32'hdf376e4e); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0e}, 32'h8494e625); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h0f}, 32'ha0cc9697); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h10}, 32'h817a0c93); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h11}, 32'h3b68cefb); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h12}, 32'h46de14c1); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h13}, 32'h52229965); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h14}, 32'h329645bd); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h15}, 32'hf4176adc); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h16}, 32'h29a8bc50); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h17}, 32'h44900fec); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h18}, 32'h1558d492); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h19}, 32'hf838a8e7); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1a}, 32'hea207abd); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1b}, 32'hcd21a28c); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1c}, 32'h91e6b02f); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1d}, 32'h2a490ea8); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1e}, 32'h5d99663b); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h1f}, 32'h87c92fb6); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h20}, 32'h0a185325); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h21}, 32'h5256a7a3); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h22}, 32'h496b7288); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h23}, 32'h6688b6c8); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h24}, 32'h650e1776); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h25}, 32'h54cd429f); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h26}, 32'h90ea3b18); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h27}, 32'h0b72ae61); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h28}, 32'hcc8651b3); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h29}, 32'ha488742d); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2a}, 32'h93c401ef); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2b}, 32'h5a2220ff); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2c}, 32'haee1f257); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2d}, 32'hf9d1e29a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2e}, 32'hd47151fe); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h2f}, 32'h4978342b); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h30}, 32'h0927048a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h31}, 32'h404b0689); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h32}, 32'hdc9df8cc); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h33}, 32'hfba9845f); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h34}, 32'heb8a39b0); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h35}, 32'hd3f24ae2); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h36}, 32'h5ea9ca0a); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h37}, 32'h0c064f94); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h38}, 32'h35368ae2); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h39}, 32'heab6c035); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3a}, 32'h9baa39c6); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3b}, 32'h2ef6259d); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3c}, 32'ha2577555); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3d}, 32'h514c7d98); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3e}, 32'h0890d44f); //TEMPLATE_EXPONENT_VALES
      write_word({EXPONENT_PREFIX, 8'h3f}, 32'hf416fbdd); //TEMPLATE_EXPONENT_VALES
      write_word({MODULUS_PREFIX, 8'h00}, 32'h2c5337a9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h01}, 32'h3f2e1ca6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h02}, 32'h91de65ea); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h03}, 32'hc3f9a3c2); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h04}, 32'hdc9099e0); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h05}, 32'h64ebe412); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h06}, 32'hf4583fae); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h07}, 32'h1fc8e8dd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h08}, 32'h92dcbbfb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h09}, 32'h9159239e); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0a}, 32'hdbbec456); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0b}, 32'h8735a660); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0c}, 32'h8248dbbc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0d}, 32'h76f01415); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0e}, 32'h3cb8a897); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h0f}, 32'h7cc09280); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h10}, 32'h6cc6db51); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h11}, 32'h9c2544da); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h12}, 32'h316564ce); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h13}, 32'h4b6d9b3b); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h14}, 32'h3e0e123f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h15}, 32'h942a4a3c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h16}, 32'h1f128873); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h17}, 32'h5ad14862); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h18}, 32'hdde8e6dd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h19}, 32'h73da31fb); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1a}, 32'h1a8a2046); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1b}, 32'hc3ff18c6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1c}, 32'h24e31d54); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1d}, 32'h7d8a1796); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1e}, 32'h88ab346c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h1f}, 32'h262bb321); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h20}, 32'h2cada5dc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h21}, 32'h1fb2284c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h22}, 32'h042375fd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h23}, 32'hba10d309); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h24}, 32'hcda978ec); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h25}, 32'h229ee156); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h26}, 32'h8470728a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h27}, 32'ha58017fd); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h28}, 32'h65727801); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h29}, 32'h1ea396a6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2a}, 32'hbd9a4bc1); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2b}, 32'h8e97c08f); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2c}, 32'hd7529796); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2d}, 32'h2c8339e9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2e}, 32'hc5340a83); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h2f}, 32'h6f7d1f9c); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h30}, 32'hd6014fec); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h31}, 32'hdffa2265); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h32}, 32'hfa9906a9); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h33}, 32'hafbd424a); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h34}, 32'h631994ae); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h35}, 32'h73a9b3f1); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h36}, 32'h2284f999); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h37}, 32'h6f8c87f6); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h38}, 32'h93136a66); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h39}, 32'h47c81e45); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3a}, 32'hd35f0e41); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3b}, 32'h238d6960); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3c}, 32'h96cf337d); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3d}, 32'h8865e4cc); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3e}, 32'h15039c40); //TEMPLATE_MODULUS_VALUES
      write_word({MODULUS_PREFIX, 8'h3f}, 32'h65ee7211); //TEMPLATE_MODULUS_VALUES

      write_word({GENERAL_PREFIX, ADDR_EXPONENT_LENGTH}, 32'h00000040); //TEMPLATE_MESSAGE_LENGTH
      write_word({GENERAL_PREFIX, ADDR_MODULUS_LENGTH}, 32'h00000040); //TEMPLATE_MODULUS_LENGTH

      // Start processing and wait for ready.
      write_word({GENERAL_PREFIX, ADDR_CTRL}, 32'h00000001);
      wait_ready();

      read_word({RESULT_PREFIX, 8'h00}); read_data = tb_read_data; success = success & assertEquals(32'h24665860, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h01}); read_data = tb_read_data; success = success & assertEquals(32'h4b150493, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h02}); read_data = tb_read_data; success = success & assertEquals(32'hc0834602, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h03}); read_data = tb_read_data; success = success & assertEquals(32'hc0b99ab5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h04}); read_data = tb_read_data; success = success & assertEquals(32'hbe649545, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h05}); read_data = tb_read_data; success = success & assertEquals(32'ha7d8b1ca, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h06}); read_data = tb_read_data; success = success & assertEquals(32'h55c1b98a, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h07}); read_data = tb_read_data; success = success & assertEquals(32'h1dce374b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h08}); read_data = tb_read_data; success = success & assertEquals(32'h65750415, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h09}); read_data = tb_read_data; success = success & assertEquals(32'h573dfed7, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0a}); read_data = tb_read_data; success = success & assertEquals(32'h95df9943, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0b}); read_data = tb_read_data; success = success & assertEquals(32'h58a4aea0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0c}); read_data = tb_read_data; success = success & assertEquals(32'h5fb40a92, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0d}); read_data = tb_read_data; success = success & assertEquals(32'h1408d9c2, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0e}); read_data = tb_read_data; success = success & assertEquals(32'hb5e23fc9, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h0f}); read_data = tb_read_data; success = success & assertEquals(32'h225eb60b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h10}); read_data = tb_read_data; success = success & assertEquals(32'h41d33a41, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h11}); read_data = tb_read_data; success = success & assertEquals(32'hbf958f7f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h12}); read_data = tb_read_data; success = success & assertEquals(32'h619f5ac1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h13}); read_data = tb_read_data; success = success & assertEquals(32'h207647f3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h14}); read_data = tb_read_data; success = success & assertEquals(32'h223e56f8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h15}); read_data = tb_read_data; success = success & assertEquals(32'h26afd4ae, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h16}); read_data = tb_read_data; success = success & assertEquals(32'h6a297840, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h17}); read_data = tb_read_data; success = success & assertEquals(32'h830947db, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h18}); read_data = tb_read_data; success = success & assertEquals(32'hbc5af940, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h19}); read_data = tb_read_data; success = success & assertEquals(32'h4c97ebb1, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1a}); read_data = tb_read_data; success = success & assertEquals(32'hca38b220, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1b}); read_data = tb_read_data; success = success & assertEquals(32'h04c9a26d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1c}); read_data = tb_read_data; success = success & assertEquals(32'h49a16b72, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1d}); read_data = tb_read_data; success = success & assertEquals(32'h0882c658, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1e}); read_data = tb_read_data; success = success & assertEquals(32'h2dbc50e0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h1f}); read_data = tb_read_data; success = success & assertEquals(32'h67e2d057, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h20}); read_data = tb_read_data; success = success & assertEquals(32'h4b8ef356, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h21}); read_data = tb_read_data; success = success & assertEquals(32'h4ba5eac3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h22}); read_data = tb_read_data; success = success & assertEquals(32'h17237d9f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h23}); read_data = tb_read_data; success = success & assertEquals(32'h27c111a8, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h24}); read_data = tb_read_data; success = success & assertEquals(32'hc1b1944e, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h25}); read_data = tb_read_data; success = success & assertEquals(32'he91fd6b6, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h26}); read_data = tb_read_data; success = success & assertEquals(32'ha78d9747, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h27}); read_data = tb_read_data; success = success & assertEquals(32'h61e946d3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h28}); read_data = tb_read_data; success = success & assertEquals(32'h0078fe23, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h29}); read_data = tb_read_data; success = success & assertEquals(32'h7770a088, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2a}); read_data = tb_read_data; success = success & assertEquals(32'h6d5762af, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2b}); read_data = tb_read_data; success = success & assertEquals(32'h435ac5f9, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2c}); read_data = tb_read_data; success = success & assertEquals(32'h36cde9d5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2d}); read_data = tb_read_data; success = success & assertEquals(32'hc313804d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2e}); read_data = tb_read_data; success = success & assertEquals(32'ha4623760, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h2f}); read_data = tb_read_data; success = success & assertEquals(32'hb1c37572, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h30}); read_data = tb_read_data; success = success & assertEquals(32'h2b22486d, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h31}); read_data = tb_read_data; success = success & assertEquals(32'h8af131e3, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h32}); read_data = tb_read_data; success = success & assertEquals(32'h3e5fc3ea, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h33}); read_data = tb_read_data; success = success & assertEquals(32'h0d9c9ba0, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h34}); read_data = tb_read_data; success = success & assertEquals(32'h218bcc8f, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h35}); read_data = tb_read_data; success = success & assertEquals(32'h8bcdfea2, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h36}); read_data = tb_read_data; success = success & assertEquals(32'hcf55a599, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h37}); read_data = tb_read_data; success = success & assertEquals(32'h57b9fcbc, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h38}); read_data = tb_read_data; success = success & assertEquals(32'h5c087f62, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h39}); read_data = tb_read_data; success = success & assertEquals(32'hec130a15, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3a}); read_data = tb_read_data; success = success & assertEquals(32'h7e8bd1f5, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3b}); read_data = tb_read_data; success = success & assertEquals(32'h60eaaa51, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3c}); read_data = tb_read_data; success = success & assertEquals(32'h020dd89b, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3d}); read_data = tb_read_data; success = success & assertEquals(32'h890cc6ea, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3e}); read_data = tb_read_data; success = success & assertEquals(32'h042d0054, read_data); //TEMPLATE_EXPECTED_VALUES 
      read_word({RESULT_PREFIX, 8'h3f}); read_data = tb_read_data; success = success & assertEquals(32'h74055863, read_data); //TEMPLATE_EXPECTED_VALUES 
     
      if (success !== 1)
        begin  
          $display("*** ERROR: autogenerated_BASIC_M5663191947183200100 was NOT successful.");
          error_ctr = error_ctr + 1;
        end
      else
        $display("*** autogenerated_BASIC_M5663191947183200100 success.");
    end
  endtask // autogenerated_BASIC_M5663191947183200100



  //----------------------------------------------------------------
  // main
  //
  // The main test functionality.
  //----------------------------------------------------------------
  initial
    begin : main

      $display("   -= Testbench for modexp started =-");
      $display("    =================================");
      $display("");

      init_sim();
      dump_dut_state();
      reset_dut();
      dump_dut_state();

autogenerated_65537_64_M4962768465676381896();
autogenerated_65537_64_M5159275287763741611();
autogenerated_65537_64_3760534544499724252();
autogenerated_65537_128_3878376283807279832();
autogenerated_65537_128_5594822731491506219();
autogenerated_65537_128_769311575533169616();
autogenerated_65537_256_7584111717683545699();
autogenerated_65537_256_M3116426901380202388();
autogenerated_65537_256_1049687409305378688();
autogenerated_65537_512_7440167874398799474();
autogenerated_65537_512_6048688486258747650();
autogenerated_65537_512_M3689965194811981076();
autogenerated_65537_1024_M5783369654979853500();
autogenerated_65537_1024_5690344643830992838();
autogenerated_65537_1024_2419688117908792423();
autogenerated_65537_2048_M4113938405113783334();
autogenerated_65537_2048_1028944263296872045();
autogenerated_65537_2048_M4248726279996728686();
autogenerated_BASIC_M4962768465676381896();
autogenerated_BASIC_8982867242010371843();
autogenerated_BASIC_5090788032873075449();
autogenerated_BASIC_8448510918869952728();
autogenerated_BASIC_4036237668019554146();
autogenerated_BASIC_M8925041444689012509();
autogenerated_BASIC_M5713608137760059379();
autogenerated_BASIC_6816968587684568101();
autogenerated_BASIC_4168013900853404774();
autogenerated_BASIC_M8394821325674331878();
autogenerated_BASIC_M2919828800172604435();
autogenerated_BASIC_4770912732078070597();
autogenerated_BASIC_3593487472385409519();
autogenerated_BASIC_4981749054780354961();
autogenerated_BASIC_7702189670289360961();
autogenerated_BASIC_M5169634701858105792();
autogenerated_BASIC_6469444563916025786();
autogenerated_BASIC_M2453278165832221565();
autogenerated_BASIC_M1847183855567461116();
autogenerated_BASIC_M7037130911981370263();
autogenerated_BASIC_5073338267670769216();
autogenerated_BASIC_M1841989679506188752();
autogenerated_BASIC_M3339729654500648482();
autogenerated_BASIC_M6837928193394880512();
autogenerated_BASIC_M7333111649825079555();
autogenerated_BASIC_480186175131589607();
autogenerated_BASIC_M5239159917778665002();
autogenerated_BASIC_228752064885223799();
autogenerated_BASIC_856940511857911599();
autogenerated_BASIC_M6501553661140603953();
autogenerated_BASIC_M8496483018338900149();
autogenerated_BASIC_6145567102166328515();
autogenerated_BASIC_7216348574014690328();
autogenerated_BASIC_M5663191947183200100();

      display_test_results();

      $display("");
      $display("*** modexp simulation done. ***");
      $finish;
    end // main
endmodule // tb_modexp

//======================================================================
// EOF tb_modexp.v
//======================================================================
